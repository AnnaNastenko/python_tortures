#!/usr/bin/env python3
# -*- coding: utf-8 -*-

# Есть значение радиуса круга
radius = 42

# Выведите на консоль значение прощади этого круга с точностю до 4-х знаков после запятой
# подсказки:
#       формулу можно подсмотреть в интернете,
#       пи возьмите равным 3.1415926
#       точность указывается в функции round()
# TODO здесь ваш код
pi = 3.1415926
square = round((radius ** 2) * pi, 4)
print(square)
 # площадь круга, с точностю до 4-х знаков после запятой

# Далее, пусть есть координаты точки
point = (23, 34)
# где 23 - координата х, 34 - координата у

# Если точка point лежит внутри того самого круга (radius = 42), то выведите на консоль True,
# Или False, если точка лежит вовне круга.
# подсказки:
#       нужно определить расстояние от этой точки до начала координат (0, 0)
#       формула так же есть в интернете
#       квадратный корень - это возведение в степень 0.5
#       операции сравнения дают булевы константы True и False

# TODO здесь ваш код
O = (0, 0)
A = point
x = 23
y = 34
result = round(((x ** 2) + (y ** 2)) ** 0.5, 2)
print(result)
point_in = result < radius
print(point_in)

# point внутри круга?

# Аналогично для другой точки
point_2 = (30, 30)
# Если точка point_2 лежит внутри круга (radius = 42), то выведите на консоль True,
# Или False, если точка лежит вовне круга.
# TODO здесь ваш код

O = (0, 0)
A = point
x = 30
y = 30
line = round(((x ** 2) + (y ** 2)) ** 0.5, 2)
print(line)
point2_in = line < radius
print(point2_in)
 # point_2 внутри круга?

# Пример вывода на консоль:
#
# 77777.7777
# False
# False


## Комментарии ##

# ** Строки 31-34| 48-51 - переменные <O> и <A> - бессмысленные
# 33-34 -> Объявлять значения второй раз - очень плохая практика. Т.к. точки point и point2 - это тьюпл, то лучшая практика
# это распокавать тьюпл.

# Например, есть точка в трехмерной системе координат:
# point_A = (20, 30, 5) # - где 20 - ось X, 30 - ось Y, 5 - ось Z
# Распаковка такого тьюпла (кортежа) должна выглядеть следующим образом:
# x, y, z = point_A
# это приемущество тьюплов, и такая распаковка присуща только это коллекции!! С листом было бы:
# x = point_A[0]
# y = point_A[1]
# z = point_A[2]



